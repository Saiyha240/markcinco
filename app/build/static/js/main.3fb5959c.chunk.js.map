{"version":3,"sources":["serviceWorker.js","theme.js","components/navigation/SidebarNavItem.jsx","components/navigation/SidebarNav.jsx","components/navigation/Sidebar.jsx","components/navigation/Navigation.jsx","components/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","overrides","MuiDrawer","paperAnchorDockedLeft","borderRight","useStyles","makeStyles","listItem","textAlign","justifyContent","listItemImage","color","&:hover","sidebarNavItem","_ref","navName","children","classes","react_default","a","createElement","Grid","container","className","item","sm","ListItemIcon","root","ListItemText","primary","mySiteName","& img","display","& h2","position","width","lineHeight","padding","background","fontSize","textTransform","fontWeight","letterSpacing","socialIcons","& a","margin","sidebarNav","react","src","Typography","variant","component","Divider","List","disablePadding","ListItem","button","divider","SidebarNavItem","AccountCircleOutlined_default","Certificate_default","BookOpenOutline_default","href","GithubBox_default","Linkedin_default","drawer","Object","defineProperty","breakpoints","up","flexShrink","appBar","marginLeft","concat","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","backgroundColor","flex","flexDirection","alignItems","content","flexGrow","sidebar","props","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","mobileOpen","setMobileOpen","handleDrawerToggle","Hidden","smUp","implementation","AppBar_default","Toolbar","IconButton","aria-label","edge","onClick","Menu_default","noWrap","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","SidebarNav","xsDown","navigation","Sidebar","minHeight","message","marginBottom","withStyles","@global","img","maxWidth","height","CssBaseline","Navigation","Container","ReactDOM","render","MuiThemeProvider","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3fb5959c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createMuiTheme} from \"@material-ui/core\";\n\nconst global_style = theme => ({\n    \"@global\": {\n        img: {\n            maxWidth: \"100%\",\n            height: \"auto\"\n        }\n    }\n});\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiDrawer: {\n            paperAnchorDockedLeft: {\n                borderRight: 0\n            }\n        }\n    }\n});\n\nexport {theme, global_style};","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    listItem: {\n        textAlign: \"center\",\n        justifyContent: \"center\"\n    },\n    listItemImage: {\n        justifyContent: \"center\",\n        color: \"rgba(225, 246, 255, 0.45)\",\n        '&:hover': {\n            color: \"rgba(225, 246, 255, 1)\"\n        }\n    }\n}));\n\nconst sidebarNavItem = ({navName, children}) => {\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.listItem}>\n            <Grid item sm={12}>\n                <ListItemIcon\n                    classes={{root: classes.listItemImage}}>\n                    {children}\n                </ListItemIcon>\n            </Grid>\n            <Grid item sm={12}>\n                <ListItemText primary={navName}/>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default sidebarNavItem;","import React, {Fragment} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport AccountCircleOutlined from \"@material-ui/icons/AccountCircleOutlined\";\nimport Certificate from \"mdi-material-ui/Certificate\";\nimport BookOpenOutline from \"mdi-material-ui/BookOpenOutline\";\nimport GithubBox from \"mdi-material-ui/GithubBox\";\nimport Linkedin from \"mdi-material-ui/Linkedin\";\n\nconst useStyles = makeStyles(theme => ({\n    mySiteName: {\n        '& img': {\n            display: \"block\"\n        },\n        '& h2': {\n            display: \"block\",\n            position: \"static\",\n            width: \"auto\",\n            lineHeight: 1.2,\n            textAlign: \"center\",\n            padding: \".8em\",\n            background: \"#2ba163\",\n            fontSize: \"12px\",\n            textTransform: \"upperCase\",\n            color: \"rgb(255,255,255)\",\n            fontWeight: \"bold\",\n            letterSpacing: \"1px\"\n        }\n    },\n    socialIcons: {\n        padding: \"10px 0\",\n        '& a': {\n            margin: \"5px\",\n            color: \"rgba(225, 246, 255, 0.45)\",\n            '&:hover': {\n                color: \"rgba(225, 246, 255, 1)\"\n            }\n        }\n    }\n}));\n\nconst sidebarNav = () => {\n    const classes = useStyles();\n\n    return (\n        <Fragment>\n            <Grid>\n                <div className={classes.mySiteName}>\n                    <img src=\"assets/img/me_new.jpg\"/>\n                    <Typography variant=\"h1\" component=\"h2\">\n                        Mark Cinco\n                    </Typography>\n                </div>\n                <Divider/>\n                <List disablePadding>\n                    <ListItem button divider={true}>\n                        <SidebarNavItem navName=\"About me\"><AccountCircleOutlined/></SidebarNavItem>\n                    </ListItem>\n                    <ListItem button divider={true}>\n                        <SidebarNavItem navName=\"Portfolio\"><Certificate/></SidebarNavItem>\n                    </ListItem>\n                    <ListItem button divider={true}>\n                        <SidebarNavItem navName=\"Blog\"><BookOpenOutline/></SidebarNavItem>\n                    </ListItem>\n                </List>\n            </Grid>\n            <div className={classes.socialIcons}>\n                <a href=\"https://github.com/Saiyha240\"><GithubBox/></a>\n                <a href=\"https://www.linkedin.com/in/mark-cinco/\"><Linkedin/></a>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default sidebarNav;","import React, {Fragment} from 'react';\nimport Hidden from \"@material-ui/core/Hidden\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport {makeStyles, useTheme} from \"@material-ui/core\";\nimport SidebarNav from \"./SidebarNav\";\n\nconst drawerWidth = 120;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: \"#1c262b\",\n        color: \"rgba(225, 246, 255, 0.45)\",\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    content: {\n        flexGrow: 1,\n        padding: `${theme.spacing(3)}`,\n        backgroundColor: 'red'\n    }\n}));\n\nconst sidebar = props => {\n    const {container} = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    function handleDrawerToggle() {\n        setMobileOpen(!mobileOpen);\n    }\n\n    return (\n        <Fragment>\n            <Hidden smUp implementation=\"css\">\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            edge=\"start\"\n                            onClick={handleDrawerToggle}\n                            className={classes.menuButton}\n                        >\n                            <Menu/>\n                        </IconButton>\n                        <Typography variant=\"h6\" noWrap>\n\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </Hidden>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        container={container}\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        <SidebarNav/>\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        <SidebarNav/>\n                    </Drawer>\n                </Hidden>\n            </nav>\n        </Fragment>\n    );\n};\n\nexport default sidebar;","import React from \"react\";\nimport Sidebar from \"./Sidebar\";\n\nconst navigation = () => <Sidebar/>;\n\nexport default navigation;","import '../App.css';\nimport React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Container, Typography} from \"@material-ui/core\";\nimport {withStyles} from \"@material-ui/styles\";\nimport {global_style} from \"../theme\";\nimport Navigation from \"./navigation/Navigation\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        display: 'flex',\n        flexGrow: 1,\n        padding: `${theme.spacing(3)}`,\n        minHeight: \"100vh\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        background: \"url('assets/img/black_linen.png')\",\n        textAlign: \"center\"\n    },\n    message: {\n        color: \"rgb(255, 255, 255)\",\n        marginBottom: \"20px\"\n    }\n}));\n\nfunction App(props) {\n    const {container} = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <Navigation/>\n            <main className={classes.content}>\n                <Container>\n                    <Typography variant=\"h2\" component=\"h2\" className={classes.message}>\n                        Currently undergoing renovations\n                    </Typography>\n\n                    <Typography variant=\"h5\" className={classes.message}>\n                        In the meantime, you may visit my LinkedIn and GitHub through the links on the navigation bar\n                    </Typography>\n                </Container>\n                {/*<div className={classes.toolbar} />*/}\n                {/*<Container>*/}\n                {/*    <Grid*/}\n                {/*        container*/}\n                {/*        direction=\"row\"*/}\n                {/*        justify=\"center\"*/}\n                {/*        alignItems=\"center\"*/}\n                {/*    >*/}\n                {/*        <Grid item xs={12}>*/}\n                {/*            Hello World*/}\n                {/*        </Grid>*/}\n                {/*    </Grid>*/}\n                {/*</Container>*/}\n            </main>\n        </div>\n    );\n}\n\nexport default withStyles(global_style)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./components/App\";\nimport {theme} from './theme';\nimport {MuiThemeProvider} from \"@material-ui/core\";\n\n// ReactGA.initialize('UA-42928197-3');\n// ReactGA.pageview(window.location.pathname + window.location.search);\n// console.log(window.location.pathname + window.location.search);\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App/>\n    </MuiThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}